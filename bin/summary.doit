#!/usr/bin/env superdoit_stone
#
# copy or link me to the bin directory of the stones where the stats will be
# 	stored
#
options
{
  SuperDoitRequiredCommandLineOption long: 'branch'.
  SuperDoitRequiredCommandLineOption long: 'version'.
  SuperDoitCommandLineOption long: 'help' short: 'h'.
  SuperDoitCommandLineOption long: 'debug' short: 'D'.
}
%
usage
-----
USAGE $basename [--help | -h] [--debug | -D] \
            --branch=<branch-name> --version=<gemstone-version>

DESCRIPTION
  Extract the test results summary for the latest test case with the given <branch-namee>
    and <gemstone-version>.

OPTIONS
      --branch=<branch-name> name of the branch to be used in the query against
                               existing test case sample in the stone
      --version=<gemstone-version>
                             gemstone version to be used in the query against
                               existing test case sample in the stone
  -h, --help                 display usage message
  -D, --debug                bring up a topaz debugger in the event of an error

EXAMPLES
  $basename -h
  $basename -D --branch=masterV2.1 --version=3.5.0
  $basename --branch=masterV2.1 --version=3.5.0
-----
%
method
getAndVerifyOptions
		self getOpts: self optionSpecs.
		self help ifTrue: [ ^ self usage ].
		self branch 
			ifNil: [ self error: 'Required ''--branch'' option not set' ].
		self version 
			ifNil: [ self error: 'Required ''--version'' option not set' ].
		self positionalArgs size > 0
			ifTrue: [self error: 'Unexpected positional argument(s) ', self positionalArgs printString].
%
doit
	[
		| suiteSample |
		self getAndVerifyOptions == self noResult
			ifTrue: [ ^ self noResult ].
    suiteSample := GsTestSuiteSample 
			latestQuerySuiteSampleFor: self branch
			andVersion: self version.
		suiteSample suiteSummaryOn: self stdout.
		^ true
	] on: Error do: [:ex | 
		self debug ifTrue: [ ex pass ].
		self exit: ex description withStatus: 1 "does not return" ].
%
