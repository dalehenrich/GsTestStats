#!/usr/bin/env superdoit_stone
#
# copy or link me to the bin directory of the stones where the stats will be
# 	stored
#
options
{
  SuperDoitRequiredCommandLineOption long: 'branch'.
  SuperDoitCommandLineOption long: 'help' short: 'h'.
  SuperDoitCommandLineOption long: 'debug' short: 'D'.
}
%
usage
-----
USAGE $basename [--help | -h] [--debug | -D] \
            --branch=<branch-name> <test-results-json-file>

DESCRIPTION
  Add the given <test-results-json-file> for the given branch to the data base.
    The gemstone version is embedded in the <test-results-json-file>, so does
    not need to be specified.

OPTIONS
  <test-results-json-file>   name of the .json file that contains the test results
      --branch=<branch-name> name of the branch to be associated with test results
                               in the <test-results-json-file>
  -h, --help                 display usage message
  -D, --debug                bring up a topaz debugger in the event of an error

EXAMPLES
  $basename -h
  $basename -D --branch=masterV2.1 testResults.json
  $basename --branch=masterV2.1 testResults.json
-----
%
method
jsonFile
	^ (self positionalArgs at: 1) asFileReference
%
method
_suiteSamplesFrom: aFileReference
	^ (GsTestSuiteSample fromJson: aFileReference)
		branch: self branch;
		yourself
%
method
getAndVerifyOptions
		self getOpts: self optionSpecs.
		self help ifTrue: [ ^ self usage ].
		self branch 
			ifNil: [ self error: 'Required ''--branch'' option not set' ].
		self positionalArgs size < 1 
			ifTrue: [self error: 'Missing positional argument <test-results-json-file>'].
%
doit
	[
		| suiteSample |
    self getAndVerifyOptions == self noResult
			ifTrue: [ ^ self noResult ].
		suiteSample := self _suiteSamplesFrom: self jsonFile.
		GsTestSuiteSample suiteSamples add: suiteSample.
		^ System commit
	] on: Error do: [:ex | 
		self debug ifTrue: [ ex pass ].
		self exit: ex description withStatus: 1 "does not return" ].
%
