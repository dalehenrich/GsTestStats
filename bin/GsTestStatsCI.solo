#!/usr/bin/env superdoit_solo
options
{
	SuperDoitOptionalOptionWithNoArg long: 'fail'.
	SuperDoitOptionalOptionWithNoArg long: 'pass'.
}
%
usage
-----
USAGE $basename [--help | -h] [--debug | -D]

DESCRIPTION
  Run the CI tests for GsTestStats

OPTIONS
  -h, --help                 display usage message
  -D, --debug                bring up topaz debugger in the event of a script error

EXAMPLES
  $basename --help
  $basename -h
  $basename --debug
  $basename -D GsTestStatsTest # run tests for classes listed on command line
  $basename -D --fail          # run tests that pass and fail
  $basename -D --pass          # run tests that pass
-----
%
specUrls
file:$GITHUB_WORKSPACE/rowan/specs/GsTestStats.ston
%
doit
	| runner reporter result classes |
	self preDoitSpecLoad: [:loadSpec |
		loadSpec 
			customConditionalAttributes: (loadSpec customConditionalAttributes, #('tests'));
			projectsHome: '$GITHUB_WORKSPACE/..'.
		].
	classes := self fail
		ifTrue: [ { Rowan globalNamed: 'SCIExcludedTests'. Rowan globalNamed: 'SCIPassingTests' } ]
		ifFalse: [ 
			self pass
				ifTrue: [ {Rowan globalNamed: 'SCIPassingTests'} ]
				ifFalse: [ 
					(self positionalArgs collect: [:each | Rowan globalNamed: each ]) reject: [:each | each isNil ] ] ].
	runner := (Rowan globalNamed: 'GsTestStatsCITestRunner')
		runClasses: classes
		named: 'Stdout-testReportSuccess'.
	reporter := (Rowan globalNamed: 'GsTestStatsCITestReporterStdout') report: runner.
	runner isSuccessful
		ifFalse: [ self exitWithStatus: 1 ].
	^ self noResult
%
